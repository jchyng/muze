<persistence xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/persistence
                      http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
  version="2.0" xmlns="http://java.sun.com/xml/ns/persistence">

  <!-- https://gist.github.com/jorgevs/218483e7ba854e8e6e23be18182b0381 -->
  <persistence-unit name="playDB-dev" transaction-type="RESOURCE_LOCAL">
    <!--        <class>org.muze.domain.Actor</class>-->
    <!--        <class>org.muze.domain.Musical</class>-->
    <!--        <class>org.muze.domain.Casting</class>-->
    <!--
      class를 지정하면 해당 클래스만 스캔해서 효율이 좋으나 직접 명시해야하는 장단점이 있음
      아래 방법을 사용하면 모든 클래스를 스캔해서 작성에서 편리함을 가져갈 수 있음
    -->
    <properties>
      <!-- H2 데이터베이스 설정 -->
      <property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/>
      <property name="javax.persistence.jdbc.url" value="jdbc:h2:mem:dev"/>
      <property name="javax.persistence.jdbc.user" value="sa"/>
      <property name="javax.persistence.jdbc.password" value=""/>
      <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/>

      <!-- Hibernate 설정 -->
      <property name="hibernate.naming.strategy"
        value=" org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl"/>
      <property name="hibernate.show_sql" value="true"/>
      <property name="hibernate.format_sql" value="true"/>
      <property name="hibernate.hbm2ddl.auto" value="create"/>
    </properties>
  </persistence-unit>

  <!-- 프로덕션 환경 (MySQL Database) -->
  <persistence-unit name="playDB-prod">
    <exclude-unlisted-classes>false</exclude-unlisted-classes>
    <properties>
      <!-- MySQL 데이터베이스 설정 -->
      <property name="javax.persistence.jdbc.driver" value="com.mysql.cj.jdbc.Driver"/>
      <property name="javax.persistence.jdbc.url"
        value="jdbc:mysql://${db.host}:${db.port}/${db.name}"/>
      <property name="javax.persistence.jdbc.user" value="${db.user}"/>
      <property name="javax.persistence.jdbc.password" value="${db.password}"/>
      <property name="hibernate.dialect" value="org.hibernate.dialect.MySQL8Dialect"/>
      <!-- JVM 환경변수 할당 방식으로 private 유지 => java -Ddb.host=localhost -Ddb.port=3306 -Ddb.name=mydb -Ddb.user=root -Ddb.password=secret -jar myapp.jar-->

      <!-- Hibernate 설정 -->
      <property name="hibernate.naming.strategy"
        value=" org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl"/>
      <property name="hibernate.hbm2ddl.auto" value="validate"/>
    </properties>
  </persistence-unit>
</persistence>